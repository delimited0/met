// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// lnNpr
NumericVector lnNpr(NumericVector a, NumericVector b, bool check);
RcppExport SEXP _met_lnNpr(SEXP aSEXP, SEXP bSEXP, SEXP checkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< bool >::type check(checkSEXP);
    rcpp_result_gen = Rcpp::wrap(lnNpr(a, b, check));
    return rcpp_result_gen;
END_RCPP
}
// cholpermGB
List cholpermGB(arma::mat Sigma, NumericVector l, NumericVector u);
RcppExport SEXP _met_cholpermGB(SEXP SigmaSEXP, SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(cholpermGB(Sigma, l, u));
    return rcpp_result_gen;
END_RCPP
}
// cholperm
List cholperm(arma::mat Sigma, NumericVector l, NumericVector u);
RcppExport SEXP _met_cholperm(SEXP SigmaSEXP, SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(cholperm(Sigma, l, u));
    return rcpp_result_gen;
END_RCPP
}
// mvnprqmc
double mvnprqmc(int n, arma::mat L, arma::vec l, arma::vec u, arma::vec mu, arma::mat x_qmc);
RcppExport SEXP _met_mvnprqmc(SEXP nSEXP, SEXP LSEXP, SEXP lSEXP, SEXP uSEXP, SEXP muSEXP, SEXP x_qmcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_qmc(x_qmcSEXP);
    rcpp_result_gen = Rcpp::wrap(mvnprqmc(n, L, l, u, mu, x_qmc));
    return rcpp_result_gen;
END_RCPP
}
// ntail
arma::vec ntail(arma::vec l, arma::vec u);
RcppExport SEXP _met_ntail(SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ntail(l, u));
    return rcpp_result_gen;
END_RCPP
}
// trnd
arma::vec trnd(arma::vec l, arma::vec u);
RcppExport SEXP _met_trnd(SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(trnd(l, u));
    return rcpp_result_gen;
END_RCPP
}
// trninv
double trninv(const double l, const double u);
RcppExport SEXP _met_trninv(SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type l(lSEXP);
    Rcpp::traits::input_parameter< const double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(trninv(l, u));
    return rcpp_result_gen;
END_RCPP
}
// trandn
arma::vec trandn(const arma::vec l, const arma::vec u);
RcppExport SEXP _met_trandn(SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(trandn(l, u));
    return rcpp_result_gen;
END_RCPP
}
// mvn_tilted_accept_reject
arma::mat mvn_tilted_accept_reject(int n, arma::vec mu, double psistar, arma::mat L, arma::vec l, arma::vec u);
RcppExport SEXP _met_mvn_tilted_accept_reject(SEXP nSEXP, SEXP muSEXP, SEXP psistarSEXP, SEXP LSEXP, SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type psistar(psistarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(mvn_tilted_accept_reject(n, mu, psistar, L, l, u));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_met_lnNpr", (DL_FUNC) &_met_lnNpr, 3},
    {"_met_cholpermGB", (DL_FUNC) &_met_cholpermGB, 3},
    {"_met_cholperm", (DL_FUNC) &_met_cholperm, 3},
    {"_met_mvnprqmc", (DL_FUNC) &_met_mvnprqmc, 6},
    {"_met_ntail", (DL_FUNC) &_met_ntail, 2},
    {"_met_trnd", (DL_FUNC) &_met_trnd, 2},
    {"_met_trninv", (DL_FUNC) &_met_trninv, 2},
    {"_met_trandn", (DL_FUNC) &_met_trandn, 2},
    {"_met_mvn_tilted_accept_reject", (DL_FUNC) &_met_mvn_tilted_accept_reject, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_met(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
